require 'erb'

namespace :deploy do
  task :finalize_update do
    if !pupcap_options[:without_librarian_puppet]
      debug = pupcap_options[:debug] ? " --verbose" : ""
      run("ln -sf #{shared_path}/librarian-puppet-cache #{release_path}/puppet/.tmp")
      run("cd #{release_path}/puppet ; /usr/local/bin/librarian-puppet install #{debug} --destructive; true")
    end
  end

  task :restart do
  end
end

namespace :apply do
  task :default do
    try_create_dirs
    find_and_execute_task("deploy")
    find_and_execute_task("deploy:cleanup")
    puppet
  end

  task :try_create_dirs do
    run("mkdir -p #{deploy_to}/releases ; mkdir -p #{deploy_to}/shared/librarian-puppet-cache ; chmod 0700 #{deploy_to}")
  end

  task :puppet do
    remote_command = "#{deploy_to}/apply.sh"

    puppet = "/usr/local/bin/puppet"
    modules = "--modulepath=#{current_path}/puppet/modules:#{current_path}/puppet/site-modules"
    nook = pupcap_options[:noop] ? " --noop" : ""
    debug = pupcap_options[:debug] ? " --debug --verbose" : ""

    erb = ERB.new(File.read("#{pupcap_root}/action/apply/puppet.sh.erb"))
    rs = erb.result(binding)

    put(rs, remote_command)
    run("chmod +x #{remote_command}")
    sudo("#{remote_command} \"$CAPISTRANO:HOSTROLES$\"")
  end

  task :cleanup do
    run("rm -rf #{deploy_to}")
  end
end
